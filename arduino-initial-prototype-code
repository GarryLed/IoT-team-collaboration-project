// IoT heat sensor prototype code 
// This code will be used for the prototype and presentation
// Notes: 
// Currently, a button is used to determine if the monitor is on or off
//The tempCelsius value is compared to the tempThreshold value to determine if the buzzer should make a sound or not 
// Example: 
// if button is in the on state (monitoring = true) then
  // if tempCelsius = 28 and tempThreshold = 30 then the LCD will display "Temperature OK!" and the buzzer will not make a sound. 
  // if tempCelsius = 34 and tempThreshold = 30 then the LCD will display "Warning: Temp High!" and the buzzer will make a sound. 
// else 
// LCD will display "Sensor is Off" 

#include <Wire.h>

#include "rgb_lcd.h" // downloaded Grove_LCD_RGB_Backlight zip from Github at https://github.com/Seeed-Studio/Grove_LCD_RGB_Backlight

rgb_lcd lcd;

const int buttonPin = 4; // Button pin in D4 of Groove kit 
const int buzzerPin = 8; // Buzzer pin in D8 of Groove kit 

int buttonState = 0;
bool monitoring = false; // initialize monitoring variable to false 
float tempCelsius = 0; // change this value to a value of 31 or more to execute the HIGH temp block of code 
float tempThreshold = 30.0; // Threshold temperature in Celsius

void setup() {
  pinMode(buttonPin, INPUT);
  pinMode(buzzerPin, OUTPUT);

  lcd.begin(16, 2);

  Serial.begin(9600); // Start serial communication at 9600 baud rate
}

void loop() {
  buttonState = digitalRead(buttonPin); // reads the digital value (HIGH or LOW) from the input button 
  
  if (buttonState == HIGH) { // checks if button is pressed or not 
    monitoring = !monitoring; // Toggle monitoring state between false and true state (this is used for the button and will be used for testing purposes only) 
    delay(500);
  }

  if (monitoring == HIGH) { // if button is pressed 
    Serial.print("Temperature: ");
    Serial.print(tempCelsius);
    Serial.println(" C");
    
    if (tempCelsius > tempThreshold) { // if current temp is greater than temp threshold then this block will execute 
      tone(buzzerPin, 1000); // Turn on the buzzer at 1000Hz
      lcd.setCursor(0, 0); // LCD cursor is positioned at the beginning of the first line 
      lcd.print("WARNING: Temp"); // displays warning message to user 
      lcd.setCursor(0, 1); // cursor is moved to second line 
      lcd.print("High!");
    } else {
      noTone(buzzerPin); // Buzzer is turned off 
      lcd.setCursor(0, 0);
      lcd.print("Temperature OK!:"); // message displaying normal temperature 
      lcd.setCursor(0, 1);
      lcd.print(tempCelsius);
    }
  } else { // default state when button is in the off position 
    noTone(buzzerPin);
    lcd.clear();
    lcd.print("Sensor is Off!"); // display message
  }
  
  delay(1000); // Main loop delay
}



